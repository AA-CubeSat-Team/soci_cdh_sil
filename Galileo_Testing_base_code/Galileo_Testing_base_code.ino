#include "nohdopppmohdjmoh_eye.h"
#include "gdbifkfcbaimlfkn_norm.h"
#include "cone.h"
#include "iecbbimomgdjjekn_xnrm2.h"
#include "expcone.h"
#include "hdjmdbaaiecbkfcj_get_f_vals.h"
#include "knohcbaaphlnkfcb_convert_to_CCS.h"
#include "ldl.h"
#include "mgdbiecbmohlcjmo_convert_to_CCS.h"
#include "rt_hypotd_snf.h"
#include "nglnimohlfkfphln_norm.h"
#include "aieknglfdbimpppp_mldivide.h"
#include "data.h"
#include "fcbilfcbmohdjekn_eye.h"
#include "lfknecbacjmgaimo_xgerc.h"
#include "kkt.h"
#include "rtGetNaN.h"
#include "mgdjecjmkfkndbim_eye.h"
#include "wright_omega.h"
#include "ohdbdjecdjekngln_xzlarfg.h"
#include "rt_nonfinite.h"
#include "hdbaecbadjekpphd_xgehrd.h"
#include "cbaalnglphdjcjek_mrdivide.h"
#include "baiegdbacjmgjekn_xungorghr.h"
#include "timer.h"
#include "glblopts.h"
#include "rtGetInf.h"
#include "splamm.h"
#include "equil.h"
#include "ohlnfkfchlnoaimo_my_find.h"
#include "ecos.h"
#include "cjmgngdjaiecmgln_my_find.h"
#include "spla.h"
#include "SuiteSparse_config.h"
#include "aiekglfkjmoplfcb_xgetrf.h"
#include "fcbafcjedbimfkfc_inv.h"
#include "fkfkimopaimgfkno_kron.h"
#include "hdbippphieknimgl_xnrm2.h"
#include "baaicbaafcbiglfk_linspace.h"
#include "amd_internal.h"
#include "cbaiohlfjeknbaim_xrot.h"
#include "biecbaaiaieclnop_eml_dlahqr.h"
#include "ecbagdjmpphdgdjm_deriv.h"
#include "bimghlngphlfpphl_Q_linearize.h"
#include "rtwtypes.h"
#include "lfkfaaaafknomohl_xdlanv2.h"
#include "gnc2_lib.h"
#include "phlnfknoohlfohdj_mldivide.h"
#include "ctrlc.h"
#include "pphlkfcjfcjmiekf_foh.h"
#include "amd.h"
#include "jmglbiekmgdbbaai_xrot.h"



void setup() {
  Serial.begin(9600);
}

void loop() {
  Serial.println("testing");
}
